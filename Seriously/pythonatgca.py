# -*- coding: utf-8 -*-
"""PythonAtGCA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CEmQH77IUdWSUzxcleI2yHqnpVwpeopn

==========================New To Python Trainer==========================
"""

for i in range(5):
  pass

for index, value in enumerate(range(1, 5)):
    if index == 3:
        continue
    print(f'Printed==>> {index}')

for index, value in enumerate(range(1, 5)):
    print(f"index: {index}, value: {value}")
    if index == 3:
        break

# while loop
i=0
while i<5:
  print(i)
  i+=1
num =[1,2,3,4,5]
print("====================")
while num:
 print(num.pop())

# enumerate
seq = ['a','b','c','d','e']
enumerate(seq)
l1=list(enumerate(seq))
print(l1)
l2=list(enumerate(seq,1))
print(l2)
for index,value in enumerate(seq):
  print(f"index: {index}, value: {value}") #f replaces the value within {} brackets
print("====================")
for index, value in enumerate(seq,3):
  print(f"index: {index}, value: {value}")

# for loop
for x in ['a','ram',1]:
  print(x)
for i in range(5,17,3): #starting value will be included but ending value won't included
  print(i)
for i in range(17,5,-3):
  print(i)
list(range(5,17))
list(range(5,17,3))

# accessing string
str ="imksav"
for x in str:
  print(x)
print("===========")
print(str[4])
print(str[-4])
print(str[3:5]) #3 is inclusively and #7 is exclusively
print(str)
id(str)
del(str)
print(str)
id(str)

# integer number
binary = 0b1010 #0b denotes the binary number system
print(binary)
octal = 0o1756 #0o denotes the octal number system
print(octal)
hex = 0xABC #0x denotes the hexa-decimal number system
print(hex)
# floating number
print(6.1E-2)
print(7.69-2)
# String
empty = ""
print(empty)
# string doesn't have any limited character
# Use of escape sequence(\)
a=5
b=6
c=a
print(c)
print("1st column\t2nd column")
print(r"Hello \n World")
print("Hello \\n World")

"""==========================Old To Python Trainer==========================

**Functions**
"""

def multiplication():
  for i in range(1,11):
    for j in range(1,11):
      print(i*j,"\t",end=" ")
    print()

multiplication()

"""**Loops**"""

# More in Loop
for i in range(2,10):
  for x in range(2,i):
    if i % x == 0:
      print(i, "equals", x,"*",i//x)
      break;
  else:
      print(i,"is a prime number.")

words = ['I','am','Keshav','Bhandari']
for i in range(len(words)):
  print(i,words[i])

# For Loop
name = str(input("Enter your name:"))
for names in name:
  print(names)
  print(name)

"""**Decision Making**"""

# if....else......
age = int(input("Enter your age:"))
if age>=18:
  print("You are voter.")
else:
  print("You aren't voter.")
# if...elif.....
per = float(input("Enter your percentage:"))
if per>=90:
  print("A+")
elif per>=80:
  print("A")
elif per>=70:
  print("B+")
elif per>=60:
  print("B")
elif per>=50:
  print("C+")
elif per>=40:
  print("C")
elif per>=30:
  print("D+")
elif per>=20:
  print("D")
elif per>=10:
  print("E")
elif per>0:
  print("F")
elif per==0:
  print("N/A")

"""**Dictionaries**

**Practice of Dictonary**
"""

# Practice of Dictonary
subjects = {"Nepali":"Kapil Raya", "English":"Diwas Thami", "Computer":"Keshav Bhandari"}
print(subjects)
for k,v in subjects.items():
  print(k,"==>",v)
for i,v in enumerate(['Apple', "Ball", "Cat"]):
  print(i+1s,"==>",v)

# More of Dict
dict1 = {
    "name": "Keshav Bhandari",
    "email": "imksav@gmail.com",
    "age": 21
}
print(dict1)
# Use of zip
questions = ["name", "email", "age"]
answers = ["Keshav Bhandari", "imksav@gmail.com", 21]
for q,a in zip(questions, answers):
  print("What is your {0}?\nMy {0} is {1}.".format(q,a))

# Use of Dict
myDict = {
    "fName": "Keshav",
    "lName": "Bhandari",
    "age": "21",
    "education": "Bachelor in Computer Science - Information Technology",
    "college": "Sunway International Business School"
}
print(myDict)
print("My name is "+myDict["fName"]+" "+myDict["lName"]+".\nI'm "+myDict["age"]+" years old.\nI'm studying "+myDict["education"]+" at "+myDict["college"]+".")
print("==========================")
print("My name is "+myDict.get("fName")+" "+myDict.get("lName")+".\nI'm "+myDict.get("age")+" years old.\nI'm studying "+myDict.get("education")+" at "+myDict.get("college")+".")
print("==========================")
for x in myDict:
  print(x)
print("==========================")
for x in myDict:
  print(myDict[x])
print("==========================")
for x in myDict.values():
  print(x)
print("==========================")
for x, y in myDict.items():
  # print(x,y)
  print(x+": "+y)

# More of Set
set1 = {1,3,5,7,9}
set2 = {2,4,6,8,10}
print(set1.union(set2))
# set1.update(set2)
set1.update(set2)
print(set1)
intersectionSet = set1.intersection(set2)
print(intersectionSet)
differenceSet = set1.difference(set2)
print(differenceSet)
print("================")
print(set1)
print(set2)
print(set1-set2)
print(set2-set1)
print(set1 | set2)
print(set1 & set2)
print(set1 ^ set2)
print(set2 ^ set1)

# Set
mySet = {1,5,9,3,7}
print(mySet)
print(5 in mySet)
print(10 in mySet)
mySet.add(11)
print(mySet)
mySet.update({13,15})
print(mySet)
mySet.remove(5)
print(mySet)
# mySet.remove(5) gives error but
mySet.discard(5) # doesn't give error
print(mySet)
mySet.pop() # starts from begining rather than last indexing
print("###########")
mySet.clear()
print(mySet)

# Tuple
myTuple = (1,6,9,7,2)
print(myTuple)
if 10 in myTuple:
  print("Yes Found")
else:
  print("Not Found")
print(9 in myTuple)
print(10 in myTuple)

# stack
stack = [1,5,9,7]
stack.append(3)
print(stack)
stack.reverse()
print(stack)
stack.pop()
stack.pop()
print(stack)
# explore more yourself

# WAP to accept inut from the user and check whether the input is positive or negative or zero.
number = int(input("Enter a number: "))
if(number > 0):
  print("positive")
elif(number<0):
  print("Negative")
else:
  print("Zero")

"""**Loop Through List**

---



"""

myList = ["Apple", "Ball", "Cat"]
print(myList)
for x in myList:
  print(x)
print(myList[1])
# use of range
for i in range(3,32,7):
  print(i)
# check item from user input
fruits = ["Apple", "Banana", "Mango", "Apple", "Banana"]
fruit = input("Enter name of fruits:")
if fruit in fruits:
  print(fruit+ " is found")
else:
  print("Not found")
print(fruits.count("Apple")) # to count the data in a list
print(fruits.index("Banana")) # place value of data in a list
print(fruits.index("Banana", 3))
fruits.append("Orange")
print(fruits)
fruits.reverse()
print(fruits)
fruits.sort()
print(fruits)
fruits.pop()

"""**First Step towards Programming**

---

```
# Fibonacci Series
```




"""

a, b = 0,1
while a<100:
  print(a, end=",")
  a,b = b, a+b

# Learning List
squares = [0,1,4,9,16,25,36]
print(squares)
print(squares[0]) # print view
print(squares[:]) # print view
print(squares[:0:]) # print view
print(squares[:-4]) # print view
print(squares[-4:]) # print view
print(squares+[49,64,81]) # add data to existing list
print(squares[:]) # print view
squares.append(100) # add the data into list
print(squares)
print(len(squares)) # printing the length of list
squares[5]=26
print(squares)
letters = ['a','c', 'd', 'u']
print(letters)
letters[1:3]=['e','i'] # add data into the given place value in list 
print(letters)
letters[1:3]=[]
print(letters)
letters[:]=[]
print(letters)
a = ["Keshav", "Hari", "Sita", "Gita"]
print(a)
b = [1,2,3,4]
print(b)
c = [a,b] # adding list of data into a list
print(c)

# Learning Strings
fName = "Keshav"
space = " "
lname = "Bhandari"
fullName =fName+space+lname # to concatate
print(fullName)
print(fName[3]) # to print the character of given place value 
print(len(fName)) # to get the length of string data
print(fullName[2:6]) # include the begining and exclude the ending place value
data1 = "     Hello       Guys!"
# newData1 = strip(data1)
newData1 = data1.strip() # strop() remove any whitespaces at the begining
print(newData1)
print(fullName.lower()) # lower() make all the letters in lowercase
print(fullName.upper()) # upper() make all the letters in uppercase
print(data1.replace("H", "#H")) # to replace the any letters in a string
print(fullName.split(" "))
skills = "Teaching,Tutoring,Dancing,Singing,Cricket Playing,Programming,Documentation,Photoshop,Event Management,App Development,Software Development,Web Development"
print(skills.split(","))

# Type Casting
x = str(3)    # x will be '3'
print(x)
print(type(x))
y = int(3)    # y will be 3
print(y)
print(type(y))
z = float(3)  # z will be 3.0
print(z)
print(type(z))

# Float Data Type
x = 23.56
y = 12
print(x+y)
print(x-y)
print(x*y)
print(x/y)
print(x%y)

# Integer Data Type
x = 5
y = 10
print(x+y)
print(x-y)
print(x*y)
print(x/y)
print(x%y)
print(type(x)) # to get the which type of data is assigned to the variable

# Starting Python
print("Hello World!")